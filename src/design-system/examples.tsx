/**\n * Design System Examples\n * \n * This file demonstrates how to use the Tribe MVP design system components\n * in various scenarios. These examples can be used for testing, documentation,\n * and as reference implementations.\n */\n\nimport React, { useState } from 'react'\nimport {\n  Button,\n  Input,\n  Textarea,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardContent,\n  CardFooter,\n  Badge,\n  Alert,\n  Container,\n  Grid,\n  GridItem,\n} from '@/components/ui'\n\n// Example 1: Baby Update Card\nexport const BabyUpdateCard: React.FC = () => {\n  const [liked, setLiked] = useState(false)\n\n  return (\n    <Card hover className=\"max-w-md\">\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle>Emma's First Steps! üë∂</CardTitle>\n          <Badge variant=\"success\" dot>\n            New\n          </Badge>\n        </div>\n        <CardDescription>\n          Shared by Sarah ‚Ä¢ 2 hours ago\n        </CardDescription>\n      </CardHeader>\n\n      <CardContent>\n        <p className=\"text-neutral-700 mb-4\">\n          Emma just took her first steps today! She walked from the couch to her toy box all by herself. \n          We're so proud! üéâ\n        </p>\n        \n        <div className=\"flex flex-wrap gap-2\">\n          <Badge variant=\"primary\">First Steps</Badge>\n          <Badge variant=\"secondary\" outline>Milestone</Badge>\n        </div>\n      </CardContent>\n\n      <CardFooter>\n        <div className=\"flex items-center justify-between w-full\">\n          <div className=\"flex gap-2\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setLiked(!liked)}\n              leftIcon={\n                <svg className={`w-4 h-4 ${liked ? 'text-error-500 fill-current' : ''}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\n                </svg>\n              }\n            >\n              {liked ? '1' : '0'}\n            </Button>\n            \n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              leftIcon={\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n                </svg>\n              }\n            >\n              Comment\n            </Button>\n          </div>\n\n          <Button variant=\"outline\" size=\"sm\">\n            Share\n          </Button>\n        </div>\n      </CardFooter>\n    </Card>\n  )\n}\n\n// Example 2: Create Update Form\nexport const CreateUpdateForm: React.FC = () => {\n  const [loading, setLoading] = useState(false)\n  const [showSuccess, setShowSuccess] = useState(false)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLoading(true)\n    \n    // Simulate API call\n    setTimeout(() => {\n      setLoading(false)\n      setShowSuccess(true)\n      setTimeout(() => setShowSuccess(false), 3000)\n    }, 2000)\n  }\n\n  return (\n    <Container size=\"md\">\n      <Card padding=\"lg\">\n        <CardHeader>\n          <CardTitle>Share a New Update</CardTitle>\n          <CardDescription>\n            Share what's happening with your little one\n          </CardDescription>\n        </CardHeader>\n\n        <CardContent>\n          {showSuccess && (\n            <Alert variant=\"success\" className=\"mb-6\" dismissible onDismiss={() => setShowSuccess(false)}>\n              Update shared successfully with your family!\n            </Alert>\n          )}\n\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <Input\n              label=\"Title\"\n              placeholder=\"What happened today?\"\n              required\n              leftIcon={\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                </svg>\n              }\n            />\n\n            <Textarea\n              label=\"Description\"\n              placeholder=\"Tell us more about what happened...\"\n              maxLength={500}\n              showCharCount\n              rows={4}\n              helperText=\"Share the details that make this moment special\"\n            />\n\n            <Input\n              label=\"Child\"\n              placeholder=\"Select child\"\n              leftIcon={\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                </svg>\n              }\n            />\n          </form>\n        </CardContent>\n\n        <CardFooter>\n          <div className=\"flex justify-between w-full\">\n            <Button variant=\"ghost\">\n              Save as Draft\n            </Button>\n            <div className=\"flex gap-3\">\n              <Button variant=\"outline\">\n                Cancel\n              </Button>\n              <Button \n                type=\"submit\" \n                loading={loading}\n                onClick={handleSubmit}\n              >\n                Share Update\n              </Button>\n            </div>\n          </div>\n        </CardFooter>\n      </Card>\n    </Container>\n  )\n}\n\n// Example 3: Family Dashboard Grid\nexport const FamilyDashboard: React.FC = () => {\n  const stats = [\n    { label: 'Total Updates', value: '127', icon: 'üìù', color: 'primary' as const },\n    { label: 'Family Members', value: '8', icon: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶', color: 'secondary' as const },\n    { label: 'Photos Shared', value: '45', icon: 'üì∏', color: 'info' as const },\n    { label: 'Milestones', value: '12', icon: 'üéØ', color: 'success' as const },\n  ]\n\n  return (\n    <Container>\n      <div className=\"mb-8\">\n        <h1 className=\"h1 mb-2\">Welcome back, Sarah!</h1>\n        <p className=\"text-lg text-neutral-600\">\n          Here's what's been happening with your family\n        </p>\n      </div>\n\n      {/* Stats Grid */}\n      <Grid cols={4} gap=\"lg\" responsive={{ sm: 1, md: 2, lg: 4 }} className=\"mb-8\">\n        {stats.map((stat, index) => (\n          <GridItem key={index}>\n            <Card hover className=\"text-center\">\n              <CardContent className=\"pt-6\">\n                <div className=\"text-3xl mb-2\">{stat.icon}</div>\n                <div className=\"text-2xl font-bold text-neutral-900 mb-1\">\n                  {stat.value}\n                </div>\n                <Badge variant={stat.color}>\n                  {stat.label}\n                </Badge>\n              </CardContent>\n            </Card>\n          </GridItem>\n        ))}\n      </Grid>\n\n      {/* Recent Updates */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"h3\">Recent Updates</h2>\n          <Button variant=\"outline\">\n            View All\n          </Button>\n        </div>\n\n        <Grid cols={2} gap=\"lg\" responsive={{ sm: 1 }}>\n          <GridItem>\n            <BabyUpdateCard />\n          </GridItem>\n          <GridItem>\n            <Card>\n              <CardHeader>\n                <CardTitle>Liam's First Tooth</CardTitle>\n                <CardDescription>Shared by Mike ‚Ä¢ 1 day ago</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <p>Liam's first tooth is coming in! He's been extra drooly lately.</p>\n              </CardContent>\n              <CardFooter>\n                <Badge variant=\"warning\">Teething</Badge>\n              </CardFooter>\n            </Card>\n          </GridItem>\n        </Grid>\n      </div>\n\n      {/* Quick Actions */}\n      <Alert variant=\"info\" title=\"Quick Start\">\n        <p className=\"mb-4\">Ready to share your next update?</p>\n        <div className=\"flex gap-3\">\n          <Button size=\"sm\">\n            New Update\n          </Button>\n          <Button variant=\"outline\" size=\"sm\">\n            Add Photos\n          </Button>\n        </div>\n      </Alert>\n    </Container>\n  )\n}\n\n// Example 4: Button Showcase\nexport const ButtonShowcase: React.FC = () => {\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <Container className=\"space-y-8\">\n      <div>\n        <h2 className=\"h2 mb-4\">Button Variants</h2>\n        <div className=\"flex flex-wrap gap-3\">\n          <Button variant=\"default\">Primary</Button>\n          <Button variant=\"secondary\">Secondary</Button>\n          <Button variant=\"outline\">Outline</Button>\n          <Button variant=\"ghost\">Ghost</Button>\n          <Button variant=\"link\">Link</Button>\n          <Button variant=\"success\">Success</Button>\n          <Button variant=\"warning\">Warning</Button>\n          <Button variant=\"destructive\">Destructive</Button>\n        </div>\n      </div>\n\n      <div>\n        <h2 className=\"h2 mb-4\">Button Sizes</h2>\n        <div className=\"flex items-end gap-3\">\n          <Button size=\"xs\">Extra Small</Button>\n          <Button size=\"sm\">Small</Button>\n          <Button size=\"default\">Default</Button>\n          <Button size=\"lg\">Large</Button>\n          <Button size=\"xl\">Extra Large</Button>\n        </div>\n      </div>\n\n      <div>\n        <h2 className=\"h2 mb-4\">Button States</h2>\n        <div className=\"flex gap-3\">\n          <Button>Normal</Button>\n          <Button disabled>Disabled</Button>\n          <Button \n            loading={loading}\n            onClick={() => {\n              setLoading(true)\n              setTimeout(() => setLoading(false), 2000)\n            }}\n          >\n            {loading ? 'Saving...' : 'Click to Load'}\n          </Button>\n        </div>\n      </div>\n\n      <div>\n        <h2 className=\"h2 mb-4\">Buttons with Icons</h2>\n        <div className=\"flex gap-3\">\n          <Button\n            leftIcon={\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n              </svg>\n            }\n          >\n            Add Update\n          </Button>\n          \n          <Button\n            variant=\"outline\"\n            rightIcon={\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n              </svg>\n            }\n          >\n            Share External\n          </Button>\n          \n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            leftIcon={\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\n              </svg>\n            }\n          />\n        </div>\n      </div>\n    </Container>\n  )\n}\n\n// Example 5: Typography and Color Showcase\nexport const TypographyShowcase: React.FC = () => {\n  return (\n    <Container className=\"space-y-12\">\n      {/* Typography */}\n      <div>\n        <h2 className=\"h2 mb-6\">Typography Scale</h2>\n        <div className=\"space-y-4\">\n          <h1 className=\"h1\">Heading 1 - Display Large</h1>\n          <h2 className=\"h2\">Heading 2 - Display Medium</h2>\n          <h3 className=\"h3\">Heading 3 - Title Large</h3>\n          <h4 className=\"h4\">Heading 4 - Title Medium</h4>\n          <h5 className=\"h5\">Heading 5 - Title Small</h5>\n          <h6 className=\"h6\">Heading 6 - Subtitle</h6>\n          <p className=\"body-lg\">Large body text for important content</p>\n          <p className=\"body\">Regular body text for main content</p>\n          <p className=\"body-sm\">Small body text for secondary information</p>\n          <p className=\"caption\">Caption text for labels and metadata</p>\n          <p className=\"overline\">OVERLINE TEXT FOR CATEGORIES</p>\n        </div>\n      </div>\n\n      {/* Color Palette */}\n      <div>\n        <h2 className=\"h2 mb-6\">Color Palette</h2>\n        \n        {/* Brand Colors */}\n        <div className=\"mb-8\">\n          <h3 className=\"h4 mb-4\">Brand Colors</h3>\n          <div className=\"grid grid-cols-5 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-primary-500 rounded-lg mb-2 mx-auto\"></div>\n              <p className=\"text-sm font-medium\">Primary</p>\n              <p className=\"text-xs text-neutral-500\">#f3841c</p>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-secondary-500 rounded-lg mb-2 mx-auto\"></div>\n              <p className=\"text-sm font-medium\">Secondary</p>\n              <p className=\"text-xs text-neutral-500\">#22c55e</p>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-accent-500 rounded-lg mb-2 mx-auto\"></div>\n              <p className=\"text-sm font-medium\">Accent</p>\n              <p className=\"text-xs text-neutral-500\">#d946ef</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Semantic Colors */}\n        <div>\n          <h3 className=\"h4 mb-4\">Semantic Colors</h3>\n          <div className=\"grid grid-cols-4 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-success-500 rounded-lg mb-2 mx-auto\"></div>\n              <p className=\"text-sm font-medium\">Success</p>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-warning-500 rounded-lg mb-2 mx-auto\"></div>\n              <p className=\"text-sm font-medium\">Warning</p>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-error-500 rounded-lg mb-2 mx-auto\"></div>\n              <p className=\"text-sm font-medium\">Error</p>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-info-500 rounded-lg mb-2 mx-auto\"></div>\n              <p className=\"text-sm font-medium\">Info</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Container>\n  )\n}